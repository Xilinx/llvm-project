// RUN: mlir-opt --split-input-file --tosa-layerwise-constant-fold %s | FileCheck %s

func.func @matmul_i8_i32_no_quant() -> tensor<2x3x5xi32> {
// CHECK: "tosa.const"() <{value = dense<{{\[\[\[}}20, -4055, -2388, -197, 7196], [-8839, -318, 3353, 3987, 4888], [-7248, -2484, 3908, 4718, 7346]], {{\[\[}}2695, -1377, -4252, 5001, -3253], [-723, 5159, -3444, -5909, 2527], [-6864, -6004, -4708, -2932, -189]]]>
  %0 = "tosa.const"() <{value = dense<
        [[[12, -29, 13, 62], [89, 83, -34, 62], [90, 76, 3, 66]], [[-44, 74, -11, 69], [9, -26, 62, 56], [-45, -31, -22, 93]]]> : tensor<2x3x4xi8>}> : () -> tensor<2x3x4xi8>
  %1 = "tosa.const"() <{value = dense<
        [[[-47, -45, -31, 68, 50], [-30, 45, 86, -1, -34], [40, -46, 32, 20, 50], [-13, -26, 1, -21, 80]], [[49, 43, 84, 3, 21], [84, 31, 4, 77, -31], [30, 99, -48, -49, 22], [-15, -10, -20, -16, 3]]]> : tensor<2x4x5xi8>}> : () -> tensor<2x4x5xi8>
  %2 = tosa.matmul %0, %1 : (tensor<2x3x4xi8>, tensor<2x4x5xi8>) -> tensor<2x3x5xi32>
  return %2 : tensor<2x3x5xi32>
}

func.func @matmul_i8_i32_with_quant() -> tensor<1x5x6xi32> {
// CHECK: "tosa.const"() <{value = dense<{{\[\[\[}}-16510, 0, 16640, 12500, 1250, -390], [-254, 0, 256, -200, -20, -6], [1143, 0, -1152, -200, -20, 27], [-254, 0, 256, -300, -30, -6], [1397, 0, -1408, 100, 10, 33]]]>
  %0 = "tosa.const"() <{value = dense<[[[-128, 3, 127], [0, 0, 0], [11, 1, 0], [0, 5, -1], [13, 0, 3]]]> : tensor<1x5x3xi8>}> : () -> tensor<1x5x3xi8>
  %1 = "tosa.const"() <{value = dense<[[[127, 0, -128, 0, 0, 3], [0, 0, 0, 0, 0, 0], [0, 0, 0, 100, 10, 0]]]> : tensor<1x3x6xi8>}> : () -> tensor<1x3x6xi8>
  %2 = tosa.matmul %0, %1 {quantization_info = #tosa.matmul_quant<a_zp = 2, b_zp = 0>} : (tensor<1x5x3xi8>, tensor<1x3x6xi8>) -> tensor<1x5x6xi32>
  return %2 : tensor<1x5x6xi32>
}

func.func @matmul_i16_i48() -> tensor<2x3x5xi48> {
// CHECK: "tosa.const"() <{value = dense<{{\[\[\[}}20, -4055, -2388, -197, 7196], [-8839, -318, 3353, 3987, 4888], [-7248, -2484, 3908, 4718, 7346]], {{\[\[}}2695, -1377, -4252, 5001, -3253], [-723, 5159, -3444, -5909, 2527], [-6864, -6004, -4708, -2932, -189]]]>
  %0 = "tosa.const"() <{value = dense<
        [[[12, -29, 13, 62], [89, 83, -34, 62], [90, 76, 3, 66]], [[-44, 74, -11, 69], [9, -26, 62, 56], [-45, -31, -22, 93]]]> : tensor<2x3x4xi16>}> : () -> tensor<2x3x4xi16>
  %1 = "tosa.const"() <{value = dense<
        [[[-47, -45, -31, 68, 50], [-30, 45, 86, -1, -34], [40, -46, 32, 20, 50], [-13, -26, 1, -21, 80]], [[49, 43, 84, 3, 21], [84, 31, 4, 77, -31], [30, 99, -48, -49, 22], [-15, -10, -20, -16, 3]]]> : tensor<2x4x5xi16>}> : () -> tensor<2x4x5xi16>
  %2 = tosa.matmul %0, %1 : (tensor<2x3x4xi16>, tensor<2x4x5xi16>) -> tensor<2x3x5xi48>
  return %2 : tensor<2x3x5xi48>
}

func.func @matmul_f32() -> tensor<2x3x5xf32> {
// CHECK: "tosa.const"() <{value = dense<{{\[\[\[}}0.132003784, 3.25514603, 1.07956505, 1.48651123, 0.86925888], [0.482788086, 1.59751129, -0.746604919, -0.0710487366, -0.550804138], [1.26652908, -2.17396069, -1.23073244, 0.111833572, 0.62697506]], {{\[\[}}0.276248455, -0.255805969, -4.372840e-01, -0.559219837, -0.688886642], [0.46005249, 2.62692261, -0.631767273, -0.704353333, 1.65861511], [1.18973613, 3.01185608, -1.39343834, -2.60851097, 1.75034809]]]>
  %0 = "tosa.const"() <{value = dense<
        [[[1.3203125, -0.275390625, -1.546875, -0.261718750], [0.980468750, 1.3359375, -0.5703125, -1.0390625], [0.349609375, -0.08251953125, 1.0390625, 0.337890625]], [[-0.640625, 0.349609375, 0.703125, -0.045654296875],[1.5625, -0.542968750, 0.4921875, -0.917968750], [-0.162109375, -1.328125, 0.734375, 0.263671875]]]> : tensor<2x3x4xf32>}> : () -> tensor<2x3x4xf32>
  %1 = "tosa.const"() <{value = dense<
        [[[1.078125, 0.056640625, -0.53515625, 0.74609375,0.80468750], [-0.25781250, -0.298828125, -0.23339843750, -0.88671875, 0.111328125], [0.92968750, -1.859375,-1.21093750, -0.11474609375, -0.15136718750], [-0.28906250, -0.84765625,0.578125, -0.30468750, 1.515625]], [[-0.02355957031250, 1.32031250,0.13574218750, 0.19433593750, 0.05517578125],[-0.51953125, -1.35156250, 0.61718750, 1.203125, -1.60156250], [0.63671875, 1.578125, -0.796875, -1.234375,-0.189453125], [0.107421875, 1.03125, 0.126953125, -0.275390625, -0.86718750]]]> : tensor<2x4x5xf32>}> : () -> tensor<2x4x5xf32>
  %2 = tosa.matmul %0, %1 : (tensor<2x3x4xf32>, tensor<2x4x5xf32>) -> tensor<2x3x5xf32>
  return %2 : tensor<2x3x5xf32>
}

func.func @matmul_bf16_f32() -> tensor<2x3x5xf32> {
// CHECK: "tosa.const"() <{value = dense<{{\[\[\[}}0.132003784, 3.25514603, 1.07956505, 1.48651123, 0.86925888], [0.482788086, 1.59751129, -0.746604919, -0.0710487366, -0.550804138], [1.26652908, -2.17396069, -1.23073244, 0.111833572, 0.62697506]], {{\[\[}}0.276248455, -0.255805969, -4.372840e-01, -0.559219837, -0.688886642], [0.46005249, 2.62692261, -0.631767273, -0.704353333, 1.65861511], [1.18973613, 3.01185608, -1.39343834, -2.60851097, 1.75034809]]]>
  %0 = "tosa.const"() <{value = dense<
        [[[1.3203125, -0.275390625, -1.546875, -0.261718750], [0.980468750, 1.3359375, -0.5703125, -1.0390625], [0.349609375, -0.08251953125, 1.0390625, 0.337890625]], [[-0.640625, 0.349609375, 0.703125, -0.045654296875],[1.5625, -0.542968750, 0.4921875, -0.917968750], [-0.162109375, -1.328125, 0.734375, 0.263671875]]]> : tensor<2x3x4xbf16>}> : () -> tensor<2x3x4xbf16>
  %1 = "tosa.const"() <{value = dense<
        [[[1.078125, 0.056640625, -0.53515625, 0.74609375,0.80468750], [-0.25781250, -0.298828125, -0.23339843750, -0.88671875, 0.111328125], [0.92968750, -1.859375,-1.21093750, -0.11474609375, -0.15136718750], [-0.28906250, -0.84765625,0.578125, -0.30468750, 1.515625]], [[-0.02355957031250, 1.32031250,0.13574218750, 0.19433593750, 0.05517578125],[-0.51953125, -1.35156250, 0.61718750, 1.203125, -1.60156250], [0.63671875, 1.578125, -0.796875, -1.234375,-0.189453125], [0.107421875, 1.03125, 0.126953125, -0.275390625, -0.86718750]]]> : tensor<2x4x5xbf16>}> : () -> tensor<2x4x5xbf16>
  %2 = tosa.matmul %0, %1 : (tensor<2x3x4xbf16>, tensor<2x4x5xbf16>) -> tensor<2x3x5xf32>
  return %2 : tensor<2x3x5xf32>
}

func.func @try_fold_matmul_with_unranked_tensor() -> tensor<*xf32> {
  // CHECK: tosa.matmul
  // CHECK-NEXT: return
  %0 = "tosa.const"() <{value = dense<
        [[[1.3203125, -0.275390625, -1.546875, -0.261718750], [0.980468750, 1.3359375, -0.5703125, -1.0390625], [0.349609375, -0.08251953125, 1.0390625, 0.337890625]], [[-0.640625, 0.349609375, 0.703125, -0.045654296875],[1.5625, -0.542968750, 0.4921875, -0.917968750], [-0.162109375, -1.328125, 0.734375, 0.263671875]]]> : tensor<2x3x4xbf16>}> : () -> tensor<2x3x4xbf16>
  %1 = "tosa.const"() <{value = dense<
        [[[1.078125, 0.056640625, -0.53515625, 0.74609375,0.80468750], [-0.25781250, -0.298828125, -0.23339843750, -0.88671875, 0.111328125], [0.92968750, -1.859375,-1.21093750, -0.11474609375, -0.15136718750], [-0.28906250, -0.84765625,0.578125, -0.30468750, 1.515625]], [[-0.02355957031250, 1.32031250,0.13574218750, 0.19433593750, 0.05517578125],[-0.51953125, -1.35156250, 0.61718750, 1.203125, -1.60156250], [0.63671875, 1.578125, -0.796875, -1.234375,-0.189453125], [0.107421875, 1.03125, 0.126953125, -0.275390625, -0.86718750]]]> : tensor<2x4x5xbf16>}> : () -> tensor<2x4x5xbf16>
  %2 = tosa.matmul %0, %1 : (tensor<2x3x4xbf16>, tensor<2x4x5xbf16>) -> tensor<*xf32>
  return %2 : tensor<*xf32>
}

func.func @try_fold_matmul_with_dynamic_tensor() -> tensor<?x?x?xf32> {
  // CHECK: tosa.matmul
  // CHECK-NEXT: return
  %0 = "tosa.const"() <{value = dense<
        [[[1.3203125, -0.275390625, -1.546875, -0.261718750], [0.980468750, 1.3359375, -0.5703125, -1.0390625], [0.349609375, -0.08251953125, 1.0390625, 0.337890625]], [[-0.640625, 0.349609375, 0.703125, -0.045654296875],[1.5625, -0.542968750, 0.4921875, -0.917968750], [-0.162109375, -1.328125, 0.734375, 0.263671875]]]> : tensor<2x3x4xbf16>}> : () -> tensor<2x3x4xbf16>
  %1 = "tosa.const"() <{value = dense<
        [[[1.078125, 0.056640625, -0.53515625, 0.74609375,0.80468750], [-0.25781250, -0.298828125, -0.23339843750, -0.88671875, 0.111328125], [0.92968750, -1.859375,-1.21093750, -0.11474609375, -0.15136718750], [-0.28906250, -0.84765625,0.578125, -0.30468750, 1.515625]], [[-0.02355957031250, 1.32031250,0.13574218750, 0.19433593750, 0.05517578125],[-0.51953125, -1.35156250, 0.61718750, 1.203125, -1.60156250], [0.63671875, 1.578125, -0.796875, -1.234375,-0.189453125], [0.107421875, 1.03125, 0.126953125, -0.275390625, -0.86718750]]]> : tensor<2x4x5xbf16>}> : () -> tensor<2x4x5xbf16>
  %2 = tosa.matmul %0, %1 : (tensor<2x3x4xbf16>, tensor<2x4x5xbf16>) -> tensor<?x?x?xf32>
  return %2 : tensor<?x?x?xf32>
}
